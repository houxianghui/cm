package com.blue.mailconfig;

import com.blue.mailconfig.MailConfig;
import com.blue.mailconfig.MailConfigExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class MailConfigDAOImpl extends SqlMapClientDaoSupport implements MailConfigDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    public MailConfigDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    public int countByExample(MailConfigExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("mail_config.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    public int deleteByExample(MailConfigExample example) {
        int rows = getSqlMapClientTemplate().delete("mail_config.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    public void insert(MailConfig record) {
        getSqlMapClientTemplate().insert("mail_config.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    public void insertSelective(MailConfig record) {
        getSqlMapClientTemplate().insert("mail_config.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    public List selectByExample(MailConfigExample example) {
        List list = getSqlMapClientTemplate().queryForList("mail_config.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    public int updateByExampleSelective(MailConfig record, MailConfigExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("mail_config.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    public int updateByExample(MailConfig record, MailConfigExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("mail_config.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table mail_config
     *
     * @ibatorgenerated Mon Jan 14 11:31:41 CST 2013
     */
    private static class UpdateByExampleParms extends MailConfigExample {
        private Object record;

        public UpdateByExampleParms(Object record, MailConfigExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}