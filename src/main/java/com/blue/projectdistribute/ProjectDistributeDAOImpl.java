package com.blue.projectdistribute;

import com.blue.projectdistribute.ProjectDistribute;
import com.blue.projectdistribute.ProjectDistributeExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class ProjectDistributeDAOImpl extends SqlMapClientDaoSupport implements ProjectDistributeDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public ProjectDistributeDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public int countByExample(ProjectDistributeExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("project_distribute.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public int deleteByExample(ProjectDistributeExample example) {
        int rows = getSqlMapClientTemplate().delete("project_distribute.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public int deleteByPrimaryKey(Integer id) {
        ProjectDistribute key = new ProjectDistribute();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("project_distribute.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public void insert(ProjectDistribute record) {
        getSqlMapClientTemplate().insert("project_distribute.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public void insertSelective(ProjectDistribute record) {
        getSqlMapClientTemplate().insert("project_distribute.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public List selectByExample(ProjectDistributeExample example) {
        List list = getSqlMapClientTemplate().queryForList("project_distribute.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public ProjectDistribute selectByPrimaryKey(Integer id) {
        ProjectDistribute key = new ProjectDistribute();
        key.setId(id);
        ProjectDistribute record = (ProjectDistribute) getSqlMapClientTemplate().queryForObject("project_distribute.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public int updateByExampleSelective(ProjectDistribute record, ProjectDistributeExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("project_distribute.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public int updateByExample(ProjectDistribute record, ProjectDistributeExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("project_distribute.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public int updateByPrimaryKeySelective(ProjectDistribute record) {
        int rows = getSqlMapClientTemplate().update("project_distribute.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    public int updateByPrimaryKey(ProjectDistribute record) {
        int rows = getSqlMapClientTemplate().update("project_distribute.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table project_distribute
     *
     * @ibatorgenerated Fri Aug 02 16:26:25 CST 2013
     */
    private static class UpdateByExampleParms extends ProjectDistributeExample {
        private Object record;

        public UpdateByExampleParms(Object record, ProjectDistributeExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}