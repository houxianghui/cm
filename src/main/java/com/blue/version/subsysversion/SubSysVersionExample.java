package com.blue.version.subsysversion;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SubSysVersionExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    public SubSysVersionExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    protected SubSysVersionExample(SubSysVersionExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table sub_sys_version
     *
     * @ibatorgenerated Thu Mar 21 09:59:31 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andVersionIdIsNull() {
            addCriterion("VERSION_ID is null");
            return this;
        }

        public Criteria andVersionIdIsNotNull() {
            addCriterion("VERSION_ID is not null");
            return this;
        }

        public Criteria andVersionIdEqualTo(String value) {
            addCriterion("VERSION_ID =", value, "versionId");
            return this;
        }

        public Criteria andVersionIdNotEqualTo(String value) {
            addCriterion("VERSION_ID <>", value, "versionId");
            return this;
        }

        public Criteria andVersionIdGreaterThan(String value) {
            addCriterion("VERSION_ID >", value, "versionId");
            return this;
        }

        public Criteria andVersionIdGreaterThanOrEqualTo(String value) {
            addCriterion("VERSION_ID >=", value, "versionId");
            return this;
        }

        public Criteria andVersionIdLessThan(String value) {
            addCriterion("VERSION_ID <", value, "versionId");
            return this;
        }

        public Criteria andVersionIdLessThanOrEqualTo(String value) {
            addCriterion("VERSION_ID <=", value, "versionId");
            return this;
        }

        public Criteria andVersionIdLike(String value) {
            addCriterion("VERSION_ID like", value, "versionId");
            return this;
        }

        public Criteria andVersionIdNotLike(String value) {
            addCriterion("VERSION_ID not like", value, "versionId");
            return this;
        }

        public Criteria andVersionIdIn(List values) {
            addCriterion("VERSION_ID in", values, "versionId");
            return this;
        }

        public Criteria andVersionIdNotIn(List values) {
            addCriterion("VERSION_ID not in", values, "versionId");
            return this;
        }

        public Criteria andVersionIdBetween(String value1, String value2) {
            addCriterion("VERSION_ID between", value1, value2, "versionId");
            return this;
        }

        public Criteria andVersionIdNotBetween(String value1, String value2) {
            addCriterion("VERSION_ID not between", value1, value2, "versionId");
            return this;
        }

        public Criteria andSysNameIsNull() {
            addCriterion("SYS_NAME is null");
            return this;
        }

        public Criteria andSysNameIsNotNull() {
            addCriterion("SYS_NAME is not null");
            return this;
        }

        public Criteria andSysNameEqualTo(String value) {
            addCriterion("SYS_NAME =", value, "sysName");
            return this;
        }

        public Criteria andSysNameNotEqualTo(String value) {
            addCriterion("SYS_NAME <>", value, "sysName");
            return this;
        }

        public Criteria andSysNameGreaterThan(String value) {
            addCriterion("SYS_NAME >", value, "sysName");
            return this;
        }

        public Criteria andSysNameGreaterThanOrEqualTo(String value) {
            addCriterion("SYS_NAME >=", value, "sysName");
            return this;
        }

        public Criteria andSysNameLessThan(String value) {
            addCriterion("SYS_NAME <", value, "sysName");
            return this;
        }

        public Criteria andSysNameLessThanOrEqualTo(String value) {
            addCriterion("SYS_NAME <=", value, "sysName");
            return this;
        }

        public Criteria andSysNameLike(String value) {
            addCriterion("SYS_NAME like", value, "sysName");
            return this;
        }

        public Criteria andSysNameNotLike(String value) {
            addCriterion("SYS_NAME not like", value, "sysName");
            return this;
        }

        public Criteria andSysNameIn(List values) {
            addCriterion("SYS_NAME in", values, "sysName");
            return this;
        }

        public Criteria andSysNameNotIn(List values) {
            addCriterion("SYS_NAME not in", values, "sysName");
            return this;
        }

        public Criteria andSysNameBetween(String value1, String value2) {
            addCriterion("SYS_NAME between", value1, value2, "sysName");
            return this;
        }

        public Criteria andSysNameNotBetween(String value1, String value2) {
            addCriterion("SYS_NAME not between", value1, value2, "sysName");
            return this;
        }

        public Criteria andPreVersionIsNull() {
            addCriterion("PRE_VERSION is null");
            return this;
        }

        public Criteria andPreVersionIsNotNull() {
            addCriterion("PRE_VERSION is not null");
            return this;
        }

        public Criteria andPreVersionEqualTo(String value) {
            addCriterion("PRE_VERSION =", value, "preVersion");
            return this;
        }

        public Criteria andPreVersionNotEqualTo(String value) {
            addCriterion("PRE_VERSION <>", value, "preVersion");
            return this;
        }

        public Criteria andPreVersionGreaterThan(String value) {
            addCriterion("PRE_VERSION >", value, "preVersion");
            return this;
        }

        public Criteria andPreVersionGreaterThanOrEqualTo(String value) {
            addCriterion("PRE_VERSION >=", value, "preVersion");
            return this;
        }

        public Criteria andPreVersionLessThan(String value) {
            addCriterion("PRE_VERSION <", value, "preVersion");
            return this;
        }

        public Criteria andPreVersionLessThanOrEqualTo(String value) {
            addCriterion("PRE_VERSION <=", value, "preVersion");
            return this;
        }

        public Criteria andPreVersionLike(String value) {
            addCriterion("PRE_VERSION like", value, "preVersion");
            return this;
        }

        public Criteria andPreVersionNotLike(String value) {
            addCriterion("PRE_VERSION not like", value, "preVersion");
            return this;
        }

        public Criteria andPreVersionIn(List values) {
            addCriterion("PRE_VERSION in", values, "preVersion");
            return this;
        }

        public Criteria andPreVersionNotIn(List values) {
            addCriterion("PRE_VERSION not in", values, "preVersion");
            return this;
        }

        public Criteria andPreVersionBetween(String value1, String value2) {
            addCriterion("PRE_VERSION between", value1, value2, "preVersion");
            return this;
        }

        public Criteria andPreVersionNotBetween(String value1, String value2) {
            addCriterion("PRE_VERSION not between", value1, value2, "preVersion");
            return this;
        }

        public Criteria andNextVersionIsNull() {
            addCriterion("NEXT_VERSION is null");
            return this;
        }

        public Criteria andNextVersionIsNotNull() {
            addCriterion("NEXT_VERSION is not null");
            return this;
        }

        public Criteria andNextVersionEqualTo(String value) {
            addCriterion("NEXT_VERSION =", value, "nextVersion");
            return this;
        }

        public Criteria andNextVersionNotEqualTo(String value) {
            addCriterion("NEXT_VERSION <>", value, "nextVersion");
            return this;
        }

        public Criteria andNextVersionGreaterThan(String value) {
            addCriterion("NEXT_VERSION >", value, "nextVersion");
            return this;
        }

        public Criteria andNextVersionGreaterThanOrEqualTo(String value) {
            addCriterion("NEXT_VERSION >=", value, "nextVersion");
            return this;
        }

        public Criteria andNextVersionLessThan(String value) {
            addCriterion("NEXT_VERSION <", value, "nextVersion");
            return this;
        }

        public Criteria andNextVersionLessThanOrEqualTo(String value) {
            addCriterion("NEXT_VERSION <=", value, "nextVersion");
            return this;
        }

        public Criteria andNextVersionLike(String value) {
            addCriterion("NEXT_VERSION like", value, "nextVersion");
            return this;
        }

        public Criteria andNextVersionNotLike(String value) {
            addCriterion("NEXT_VERSION not like", value, "nextVersion");
            return this;
        }

        public Criteria andNextVersionIn(List values) {
            addCriterion("NEXT_VERSION in", values, "nextVersion");
            return this;
        }

        public Criteria andNextVersionNotIn(List values) {
            addCriterion("NEXT_VERSION not in", values, "nextVersion");
            return this;
        }

        public Criteria andNextVersionBetween(String value1, String value2) {
            addCriterion("NEXT_VERSION between", value1, value2, "nextVersion");
            return this;
        }

        public Criteria andNextVersionNotBetween(String value1, String value2) {
            addCriterion("NEXT_VERSION not between", value1, value2, "nextVersion");
            return this;
        }
    }
}