package com.blue.expenses;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ExpensesInfoExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    public ExpensesInfoExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    protected ExpensesInfoExample(ExpensesInfoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table expenses_info
     *
     * @ibatorgenerated Tue Apr 15 16:57:38 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andExpensesIdIsNull() {
            addCriterion("EXPENSES_ID is null");
            return this;
        }

        public Criteria andExpensesIdIsNotNull() {
            addCriterion("EXPENSES_ID is not null");
            return this;
        }

        public Criteria andExpensesIdEqualTo(Long value) {
            addCriterion("EXPENSES_ID =", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotEqualTo(Long value) {
            addCriterion("EXPENSES_ID <>", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdGreaterThan(Long value) {
            addCriterion("EXPENSES_ID >", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdGreaterThanOrEqualTo(Long value) {
            addCriterion("EXPENSES_ID >=", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdLessThan(Long value) {
            addCriterion("EXPENSES_ID <", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdLessThanOrEqualTo(Long value) {
            addCriterion("EXPENSES_ID <=", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdIn(List values) {
            addCriterion("EXPENSES_ID in", values, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotIn(List values) {
            addCriterion("EXPENSES_ID not in", values, "expensesId");
            return this;
        }

        public Criteria andExpensesIdBetween(Long value1, Long value2) {
            addCriterion("EXPENSES_ID between", value1, value2, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotBetween(Long value1, Long value2) {
            addCriterion("EXPENSES_ID not between", value1, value2, "expensesId");
            return this;
        }

        public Criteria andDeptIsNull() {
            addCriterion("DEPT is null");
            return this;
        }

        public Criteria andDeptIsNotNull() {
            addCriterion("DEPT is not null");
            return this;
        }

        public Criteria andDeptEqualTo(String value) {
            addCriterion("DEPT =", value, "dept");
            return this;
        }

        public Criteria andDeptNotEqualTo(String value) {
            addCriterion("DEPT <>", value, "dept");
            return this;
        }

        public Criteria andDeptGreaterThan(String value) {
            addCriterion("DEPT >", value, "dept");
            return this;
        }

        public Criteria andDeptGreaterThanOrEqualTo(String value) {
            addCriterion("DEPT >=", value, "dept");
            return this;
        }

        public Criteria andDeptLessThan(String value) {
            addCriterion("DEPT <", value, "dept");
            return this;
        }

        public Criteria andDeptLessThanOrEqualTo(String value) {
            addCriterion("DEPT <=", value, "dept");
            return this;
        }

        public Criteria andDeptLike(String value) {
            addCriterion("DEPT like", value, "dept");
            return this;
        }

        public Criteria andDeptNotLike(String value) {
            addCriterion("DEPT not like", value, "dept");
            return this;
        }

        public Criteria andDeptIn(List values) {
            addCriterion("DEPT in", values, "dept");
            return this;
        }

        public Criteria andDeptNotIn(List values) {
            addCriterion("DEPT not in", values, "dept");
            return this;
        }

        public Criteria andDeptBetween(String value1, String value2) {
            addCriterion("DEPT between", value1, value2, "dept");
            return this;
        }

        public Criteria andDeptNotBetween(String value1, String value2) {
            addCriterion("DEPT not between", value1, value2, "dept");
            return this;
        }

        public Criteria andProjectNoIsNull() {
            addCriterion("PROJECT_NO is null");
            return this;
        }

        public Criteria andProjectNoIsNotNull() {
            addCriterion("PROJECT_NO is not null");
            return this;
        }

        public Criteria andProjectNoEqualTo(String value) {
            addCriterion("PROJECT_NO =", value, "projectNo");
            return this;
        }

        public Criteria andProjectNoNotEqualTo(String value) {
            addCriterion("PROJECT_NO <>", value, "projectNo");
            return this;
        }

        public Criteria andProjectNoGreaterThan(String value) {
            addCriterion("PROJECT_NO >", value, "projectNo");
            return this;
        }

        public Criteria andProjectNoGreaterThanOrEqualTo(String value) {
            addCriterion("PROJECT_NO >=", value, "projectNo");
            return this;
        }

        public Criteria andProjectNoLessThan(String value) {
            addCriterion("PROJECT_NO <", value, "projectNo");
            return this;
        }

        public Criteria andProjectNoLessThanOrEqualTo(String value) {
            addCriterion("PROJECT_NO <=", value, "projectNo");
            return this;
        }

        public Criteria andProjectNoLike(String value) {
            addCriterion("PROJECT_NO like", value, "projectNo");
            return this;
        }

        public Criteria andProjectNoNotLike(String value) {
            addCriterion("PROJECT_NO not like", value, "projectNo");
            return this;
        }

        public Criteria andProjectNoIn(List values) {
            addCriterion("PROJECT_NO in", values, "projectNo");
            return this;
        }

        public Criteria andProjectNoNotIn(List values) {
            addCriterion("PROJECT_NO not in", values, "projectNo");
            return this;
        }

        public Criteria andProjectNoBetween(String value1, String value2) {
            addCriterion("PROJECT_NO between", value1, value2, "projectNo");
            return this;
        }

        public Criteria andProjectNoNotBetween(String value1, String value2) {
            addCriterion("PROJECT_NO not between", value1, value2, "projectNo");
            return this;
        }

        public Criteria andProjectNameIsNull() {
            addCriterion("PROJECT_NAME is null");
            return this;
        }

        public Criteria andProjectNameIsNotNull() {
            addCriterion("PROJECT_NAME is not null");
            return this;
        }

        public Criteria andProjectNameEqualTo(String value) {
            addCriterion("PROJECT_NAME =", value, "projectName");
            return this;
        }

        public Criteria andProjectNameNotEqualTo(String value) {
            addCriterion("PROJECT_NAME <>", value, "projectName");
            return this;
        }

        public Criteria andProjectNameGreaterThan(String value) {
            addCriterion("PROJECT_NAME >", value, "projectName");
            return this;
        }

        public Criteria andProjectNameGreaterThanOrEqualTo(String value) {
            addCriterion("PROJECT_NAME >=", value, "projectName");
            return this;
        }

        public Criteria andProjectNameLessThan(String value) {
            addCriterion("PROJECT_NAME <", value, "projectName");
            return this;
        }

        public Criteria andProjectNameLessThanOrEqualTo(String value) {
            addCriterion("PROJECT_NAME <=", value, "projectName");
            return this;
        }

        public Criteria andProjectNameLike(String value) {
            addCriterion("PROJECT_NAME like", value, "projectName");
            return this;
        }

        public Criteria andProjectNameNotLike(String value) {
            addCriterion("PROJECT_NAME not like", value, "projectName");
            return this;
        }

        public Criteria andProjectNameIn(List values) {
            addCriterion("PROJECT_NAME in", values, "projectName");
            return this;
        }

        public Criteria andProjectNameNotIn(List values) {
            addCriterion("PROJECT_NAME not in", values, "projectName");
            return this;
        }

        public Criteria andProjectNameBetween(String value1, String value2) {
            addCriterion("PROJECT_NAME between", value1, value2, "projectName");
            return this;
        }

        public Criteria andProjectNameNotBetween(String value1, String value2) {
            addCriterion("PROJECT_NAME not between", value1, value2, "projectName");
            return this;
        }

        public Criteria andTotalAmtIsNull() {
            addCriterion("TOTAL_AMT is null");
            return this;
        }

        public Criteria andTotalAmtIsNotNull() {
            addCriterion("TOTAL_AMT is not null");
            return this;
        }

        public Criteria andTotalAmtEqualTo(Double value) {
            addCriterion("TOTAL_AMT =", value, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtNotEqualTo(Double value) {
            addCriterion("TOTAL_AMT <>", value, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtGreaterThan(Double value) {
            addCriterion("TOTAL_AMT >", value, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtGreaterThanOrEqualTo(Double value) {
            addCriterion("TOTAL_AMT >=", value, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtLessThan(Double value) {
            addCriterion("TOTAL_AMT <", value, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtLessThanOrEqualTo(Double value) {
            addCriterion("TOTAL_AMT <=", value, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtIn(List values) {
            addCriterion("TOTAL_AMT in", values, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtNotIn(List values) {
            addCriterion("TOTAL_AMT not in", values, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtBetween(Double value1, Double value2) {
            addCriterion("TOTAL_AMT between", value1, value2, "totalAmt");
            return this;
        }

        public Criteria andTotalAmtNotBetween(Double value1, Double value2) {
            addCriterion("TOTAL_AMT not between", value1, value2, "totalAmt");
            return this;
        }

        public Criteria andCurrUserIsNull() {
            addCriterion("CURR_USER is null");
            return this;
        }

        public Criteria andCurrUserIsNotNull() {
            addCriterion("CURR_USER is not null");
            return this;
        }

        public Criteria andCurrUserEqualTo(String value) {
            addCriterion("CURR_USER =", value, "currUser");
            return this;
        }

        public Criteria andCurrUserNotEqualTo(String value) {
            addCriterion("CURR_USER <>", value, "currUser");
            return this;
        }

        public Criteria andCurrUserGreaterThan(String value) {
            addCriterion("CURR_USER >", value, "currUser");
            return this;
        }

        public Criteria andCurrUserGreaterThanOrEqualTo(String value) {
            addCriterion("CURR_USER >=", value, "currUser");
            return this;
        }

        public Criteria andCurrUserLessThan(String value) {
            addCriterion("CURR_USER <", value, "currUser");
            return this;
        }

        public Criteria andCurrUserLessThanOrEqualTo(String value) {
            addCriterion("CURR_USER <=", value, "currUser");
            return this;
        }

        public Criteria andCurrUserLike(String value) {
            addCriterion("CURR_USER like", value, "currUser");
            return this;
        }

        public Criteria andCurrUserNotLike(String value) {
            addCriterion("CURR_USER not like", value, "currUser");
            return this;
        }

        public Criteria andCurrUserIn(List values) {
            addCriterion("CURR_USER in", values, "currUser");
            return this;
        }

        public Criteria andCurrUserNotIn(List values) {
            addCriterion("CURR_USER not in", values, "currUser");
            return this;
        }

        public Criteria andCurrUserBetween(String value1, String value2) {
            addCriterion("CURR_USER between", value1, value2, "currUser");
            return this;
        }

        public Criteria andCurrUserNotBetween(String value1, String value2) {
            addCriterion("CURR_USER not between", value1, value2, "currUser");
            return this;
        }

        public Criteria andCurrStatIsNull() {
            addCriterion("CURR_STAT is null");
            return this;
        }

        public Criteria andCurrStatIsNotNull() {
            addCriterion("CURR_STAT is not null");
            return this;
        }

        public Criteria andCurrStatEqualTo(String value) {
            addCriterion("CURR_STAT =", value, "currStat");
            return this;
        }

        public Criteria andCurrStatNotEqualTo(String value) {
            addCriterion("CURR_STAT <>", value, "currStat");
            return this;
        }

        public Criteria andCurrStatGreaterThan(String value) {
            addCriterion("CURR_STAT >", value, "currStat");
            return this;
        }

        public Criteria andCurrStatGreaterThanOrEqualTo(String value) {
            addCriterion("CURR_STAT >=", value, "currStat");
            return this;
        }

        public Criteria andCurrStatLessThan(String value) {
            addCriterion("CURR_STAT <", value, "currStat");
            return this;
        }

        public Criteria andCurrStatLessThanOrEqualTo(String value) {
            addCriterion("CURR_STAT <=", value, "currStat");
            return this;
        }

        public Criteria andCurrStatLike(String value) {
            addCriterion("CURR_STAT like", value, "currStat");
            return this;
        }

        public Criteria andCurrStatNotLike(String value) {
            addCriterion("CURR_STAT not like", value, "currStat");
            return this;
        }

        public Criteria andCurrStatIn(List values) {
            addCriterion("CURR_STAT in", values, "currStat");
            return this;
        }

        public Criteria andCurrStatNotIn(List values) {
            addCriterion("CURR_STAT not in", values, "currStat");
            return this;
        }

        public Criteria andCurrStatBetween(String value1, String value2) {
            addCriterion("CURR_STAT between", value1, value2, "currStat");
            return this;
        }

        public Criteria andCurrStatNotBetween(String value1, String value2) {
            addCriterion("CURR_STAT not between", value1, value2, "currStat");
            return this;
        }

        public Criteria andRegUserIsNull() {
            addCriterion("REG_USER is null");
            return this;
        }

        public Criteria andRegUserIsNotNull() {
            addCriterion("REG_USER is not null");
            return this;
        }

        public Criteria andRegUserEqualTo(String value) {
            addCriterion("REG_USER =", value, "regUser");
            return this;
        }

        public Criteria andRegUserNotEqualTo(String value) {
            addCriterion("REG_USER <>", value, "regUser");
            return this;
        }

        public Criteria andRegUserGreaterThan(String value) {
            addCriterion("REG_USER >", value, "regUser");
            return this;
        }

        public Criteria andRegUserGreaterThanOrEqualTo(String value) {
            addCriterion("REG_USER >=", value, "regUser");
            return this;
        }

        public Criteria andRegUserLessThan(String value) {
            addCriterion("REG_USER <", value, "regUser");
            return this;
        }

        public Criteria andRegUserLessThanOrEqualTo(String value) {
            addCriterion("REG_USER <=", value, "regUser");
            return this;
        }

        public Criteria andRegUserLike(String value) {
            addCriterion("REG_USER like", value, "regUser");
            return this;
        }

        public Criteria andRegUserNotLike(String value) {
            addCriterion("REG_USER not like", value, "regUser");
            return this;
        }

        public Criteria andRegUserIn(List values) {
            addCriterion("REG_USER in", values, "regUser");
            return this;
        }

        public Criteria andRegUserNotIn(List values) {
            addCriterion("REG_USER not in", values, "regUser");
            return this;
        }

        public Criteria andRegUserBetween(String value1, String value2) {
            addCriterion("REG_USER between", value1, value2, "regUser");
            return this;
        }

        public Criteria andRegUserNotBetween(String value1, String value2) {
            addCriterion("REG_USER not between", value1, value2, "regUser");
            return this;
        }

        public Criteria andRegDateIsNull() {
            addCriterion("REG_DATE is null");
            return this;
        }

        public Criteria andRegDateIsNotNull() {
            addCriterion("REG_DATE is not null");
            return this;
        }

        public Criteria andRegDateEqualTo(String value) {
            addCriterion("REG_DATE =", value, "regDate");
            return this;
        }

        public Criteria andRegDateNotEqualTo(String value) {
            addCriterion("REG_DATE <>", value, "regDate");
            return this;
        }

        public Criteria andRegDateGreaterThan(String value) {
            addCriterion("REG_DATE >", value, "regDate");
            return this;
        }

        public Criteria andRegDateGreaterThanOrEqualTo(String value) {
            addCriterion("REG_DATE >=", value, "regDate");
            return this;
        }

        public Criteria andRegDateLessThan(String value) {
            addCriterion("REG_DATE <", value, "regDate");
            return this;
        }

        public Criteria andRegDateLessThanOrEqualTo(String value) {
            addCriterion("REG_DATE <=", value, "regDate");
            return this;
        }

        public Criteria andRegDateLike(String value) {
            addCriterion("REG_DATE like", value, "regDate");
            return this;
        }

        public Criteria andRegDateNotLike(String value) {
            addCriterion("REG_DATE not like", value, "regDate");
            return this;
        }

        public Criteria andRegDateIn(List values) {
            addCriterion("REG_DATE in", values, "regDate");
            return this;
        }

        public Criteria andRegDateNotIn(List values) {
            addCriterion("REG_DATE not in", values, "regDate");
            return this;
        }

        public Criteria andRegDateBetween(String value1, String value2) {
            addCriterion("REG_DATE between", value1, value2, "regDate");
            return this;
        }

        public Criteria andRegDateNotBetween(String value1, String value2) {
            addCriterion("REG_DATE not between", value1, value2, "regDate");
            return this;
        }
    }
}