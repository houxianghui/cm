package com.blue.expenses.detail;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ExpensesDetailExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    public ExpensesDetailExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    protected ExpensesDetailExample(ExpensesDetailExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table expenses_detail
     *
     * @ibatorgenerated Tue Apr 15 15:14:50 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andEdetailIdIsNull() {
            addCriterion("EDETAIL_ID is null");
            return this;
        }

        public Criteria andEdetailIdIsNotNull() {
            addCriterion("EDETAIL_ID is not null");
            return this;
        }

        public Criteria andEdetailIdEqualTo(Long value) {
            addCriterion("EDETAIL_ID =", value, "edetailId");
            return this;
        }

        public Criteria andEdetailIdNotEqualTo(Long value) {
            addCriterion("EDETAIL_ID <>", value, "edetailId");
            return this;
        }

        public Criteria andEdetailIdGreaterThan(Long value) {
            addCriterion("EDETAIL_ID >", value, "edetailId");
            return this;
        }

        public Criteria andEdetailIdGreaterThanOrEqualTo(Long value) {
            addCriterion("EDETAIL_ID >=", value, "edetailId");
            return this;
        }

        public Criteria andEdetailIdLessThan(Long value) {
            addCriterion("EDETAIL_ID <", value, "edetailId");
            return this;
        }

        public Criteria andEdetailIdLessThanOrEqualTo(Long value) {
            addCriterion("EDETAIL_ID <=", value, "edetailId");
            return this;
        }

        public Criteria andEdetailIdIn(List values) {
            addCriterion("EDETAIL_ID in", values, "edetailId");
            return this;
        }

        public Criteria andEdetailIdNotIn(List values) {
            addCriterion("EDETAIL_ID not in", values, "edetailId");
            return this;
        }

        public Criteria andEdetailIdBetween(Long value1, Long value2) {
            addCriterion("EDETAIL_ID between", value1, value2, "edetailId");
            return this;
        }

        public Criteria andEdetailIdNotBetween(Long value1, Long value2) {
            addCriterion("EDETAIL_ID not between", value1, value2, "edetailId");
            return this;
        }

        public Criteria andExpensesIdIsNull() {
            addCriterion("EXPENSES_ID is null");
            return this;
        }

        public Criteria andExpensesIdIsNotNull() {
            addCriterion("EXPENSES_ID is not null");
            return this;
        }

        public Criteria andExpensesIdEqualTo(Long value) {
            addCriterion("EXPENSES_ID =", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotEqualTo(Long value) {
            addCriterion("EXPENSES_ID <>", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdGreaterThan(Long value) {
            addCriterion("EXPENSES_ID >", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdGreaterThanOrEqualTo(Long value) {
            addCriterion("EXPENSES_ID >=", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdLessThan(Long value) {
            addCriterion("EXPENSES_ID <", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdLessThanOrEqualTo(Long value) {
            addCriterion("EXPENSES_ID <=", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdIn(List values) {
            addCriterion("EXPENSES_ID in", values, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotIn(List values) {
            addCriterion("EXPENSES_ID not in", values, "expensesId");
            return this;
        }

        public Criteria andExpensesIdBetween(Long value1, Long value2) {
            addCriterion("EXPENSES_ID between", value1, value2, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotBetween(Long value1, Long value2) {
            addCriterion("EXPENSES_ID not between", value1, value2, "expensesId");
            return this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("TIME is null");
            return this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("TIME is not null");
            return this;
        }

        public Criteria andTimeEqualTo(String value) {
            addCriterion("TIME =", value, "time");
            return this;
        }

        public Criteria andTimeNotEqualTo(String value) {
            addCriterion("TIME <>", value, "time");
            return this;
        }

        public Criteria andTimeGreaterThan(String value) {
            addCriterion("TIME >", value, "time");
            return this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(String value) {
            addCriterion("TIME >=", value, "time");
            return this;
        }

        public Criteria andTimeLessThan(String value) {
            addCriterion("TIME <", value, "time");
            return this;
        }

        public Criteria andTimeLessThanOrEqualTo(String value) {
            addCriterion("TIME <=", value, "time");
            return this;
        }

        public Criteria andTimeLike(String value) {
            addCriterion("TIME like", value, "time");
            return this;
        }

        public Criteria andTimeNotLike(String value) {
            addCriterion("TIME not like", value, "time");
            return this;
        }

        public Criteria andTimeIn(List values) {
            addCriterion("TIME in", values, "time");
            return this;
        }

        public Criteria andTimeNotIn(List values) {
            addCriterion("TIME not in", values, "time");
            return this;
        }

        public Criteria andTimeBetween(String value1, String value2) {
            addCriterion("TIME between", value1, value2, "time");
            return this;
        }

        public Criteria andTimeNotBetween(String value1, String value2) {
            addCriterion("TIME not between", value1, value2, "time");
            return this;
        }

        public Criteria andContentIsNull() {
            addCriterion("CONTENT is null");
            return this;
        }

        public Criteria andContentIsNotNull() {
            addCriterion("CONTENT is not null");
            return this;
        }

        public Criteria andContentEqualTo(String value) {
            addCriterion("CONTENT =", value, "content");
            return this;
        }

        public Criteria andContentNotEqualTo(String value) {
            addCriterion("CONTENT <>", value, "content");
            return this;
        }

        public Criteria andContentGreaterThan(String value) {
            addCriterion("CONTENT >", value, "content");
            return this;
        }

        public Criteria andContentGreaterThanOrEqualTo(String value) {
            addCriterion("CONTENT >=", value, "content");
            return this;
        }

        public Criteria andContentLessThan(String value) {
            addCriterion("CONTENT <", value, "content");
            return this;
        }

        public Criteria andContentLessThanOrEqualTo(String value) {
            addCriterion("CONTENT <=", value, "content");
            return this;
        }

        public Criteria andContentLike(String value) {
            addCriterion("CONTENT like", value, "content");
            return this;
        }

        public Criteria andContentNotLike(String value) {
            addCriterion("CONTENT not like", value, "content");
            return this;
        }

        public Criteria andContentIn(List values) {
            addCriterion("CONTENT in", values, "content");
            return this;
        }

        public Criteria andContentNotIn(List values) {
            addCriterion("CONTENT not in", values, "content");
            return this;
        }

        public Criteria andContentBetween(String value1, String value2) {
            addCriterion("CONTENT between", value1, value2, "content");
            return this;
        }

        public Criteria andContentNotBetween(String value1, String value2) {
            addCriterion("CONTENT not between", value1, value2, "content");
            return this;
        }

        public Criteria andInvoicenoIsNull() {
            addCriterion("INVOICENO is null");
            return this;
        }

        public Criteria andInvoicenoIsNotNull() {
            addCriterion("INVOICENO is not null");
            return this;
        }

        public Criteria andInvoicenoEqualTo(Integer value) {
            addCriterion("INVOICENO =", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoNotEqualTo(Integer value) {
            addCriterion("INVOICENO <>", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoGreaterThan(Integer value) {
            addCriterion("INVOICENO >", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoGreaterThanOrEqualTo(Integer value) {
            addCriterion("INVOICENO >=", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoLessThan(Integer value) {
            addCriterion("INVOICENO <", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoLessThanOrEqualTo(Integer value) {
            addCriterion("INVOICENO <=", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoIn(List values) {
            addCriterion("INVOICENO in", values, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoNotIn(List values) {
            addCriterion("INVOICENO not in", values, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoBetween(Integer value1, Integer value2) {
            addCriterion("INVOICENO between", value1, value2, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoNotBetween(Integer value1, Integer value2) {
            addCriterion("INVOICENO not between", value1, value2, "invoiceno");
            return this;
        }

        public Criteria andAmtIsNull() {
            addCriterion("AMT is null");
            return this;
        }

        public Criteria andAmtIsNotNull() {
            addCriterion("AMT is not null");
            return this;
        }

        public Criteria andAmtEqualTo(Double value) {
            addCriterion("AMT =", value, "amt");
            return this;
        }

        public Criteria andAmtNotEqualTo(Double value) {
            addCriterion("AMT <>", value, "amt");
            return this;
        }

        public Criteria andAmtGreaterThan(Double value) {
            addCriterion("AMT >", value, "amt");
            return this;
        }

        public Criteria andAmtGreaterThanOrEqualTo(Double value) {
            addCriterion("AMT >=", value, "amt");
            return this;
        }

        public Criteria andAmtLessThan(Double value) {
            addCriterion("AMT <", value, "amt");
            return this;
        }

        public Criteria andAmtLessThanOrEqualTo(Double value) {
            addCriterion("AMT <=", value, "amt");
            return this;
        }

        public Criteria andAmtIn(List values) {
            addCriterion("AMT in", values, "amt");
            return this;
        }

        public Criteria andAmtNotIn(List values) {
            addCriterion("AMT not in", values, "amt");
            return this;
        }

        public Criteria andAmtBetween(Double value1, Double value2) {
            addCriterion("AMT between", value1, value2, "amt");
            return this;
        }

        public Criteria andAmtNotBetween(Double value1, Double value2) {
            addCriterion("AMT not between", value1, value2, "amt");
            return this;
        }

        public Criteria andFeeKindIsNull() {
            addCriterion("FEE_KIND is null");
            return this;
        }

        public Criteria andFeeKindIsNotNull() {
            addCriterion("FEE_KIND is not null");
            return this;
        }

        public Criteria andFeeKindEqualTo(String value) {
            addCriterion("FEE_KIND =", value, "feeKind");
            return this;
        }

        public Criteria andFeeKindNotEqualTo(String value) {
            addCriterion("FEE_KIND <>", value, "feeKind");
            return this;
        }

        public Criteria andFeeKindGreaterThan(String value) {
            addCriterion("FEE_KIND >", value, "feeKind");
            return this;
        }

        public Criteria andFeeKindGreaterThanOrEqualTo(String value) {
            addCriterion("FEE_KIND >=", value, "feeKind");
            return this;
        }

        public Criteria andFeeKindLessThan(String value) {
            addCriterion("FEE_KIND <", value, "feeKind");
            return this;
        }

        public Criteria andFeeKindLessThanOrEqualTo(String value) {
            addCriterion("FEE_KIND <=", value, "feeKind");
            return this;
        }

        public Criteria andFeeKindLike(String value) {
            addCriterion("FEE_KIND like", value, "feeKind");
            return this;
        }

        public Criteria andFeeKindNotLike(String value) {
            addCriterion("FEE_KIND not like", value, "feeKind");
            return this;
        }

        public Criteria andFeeKindIn(List values) {
            addCriterion("FEE_KIND in", values, "feeKind");
            return this;
        }

        public Criteria andFeeKindNotIn(List values) {
            addCriterion("FEE_KIND not in", values, "feeKind");
            return this;
        }

        public Criteria andFeeKindBetween(String value1, String value2) {
            addCriterion("FEE_KIND between", value1, value2, "feeKind");
            return this;
        }

        public Criteria andFeeKindNotBetween(String value1, String value2) {
            addCriterion("FEE_KIND not between", value1, value2, "feeKind");
            return this;
        }
    }
}