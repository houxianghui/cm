package com.blue.travel.detail;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TravelDetailExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    public TravelDetailExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    protected TravelDetailExample(TravelDetailExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table travel_detail
     *
     * @ibatorgenerated Mon Mar 31 15:26:29 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTdetailIdIsNull() {
            addCriterion("TDETAIL_ID is null");
            return this;
        }

        public Criteria andTdetailIdIsNotNull() {
            addCriterion("TDETAIL_ID is not null");
            return this;
        }

        public Criteria andTdetailIdEqualTo(Long value) {
            addCriterion("TDETAIL_ID =", value, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdNotEqualTo(Long value) {
            addCriterion("TDETAIL_ID <>", value, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdGreaterThan(Long value) {
            addCriterion("TDETAIL_ID >", value, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdGreaterThanOrEqualTo(Long value) {
            addCriterion("TDETAIL_ID >=", value, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdLessThan(Long value) {
            addCriterion("TDETAIL_ID <", value, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdLessThanOrEqualTo(Long value) {
            addCriterion("TDETAIL_ID <=", value, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdIn(List values) {
            addCriterion("TDETAIL_ID in", values, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdNotIn(List values) {
            addCriterion("TDETAIL_ID not in", values, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdBetween(Long value1, Long value2) {
            addCriterion("TDETAIL_ID between", value1, value2, "tdetailId");
            return this;
        }

        public Criteria andTdetailIdNotBetween(Long value1, Long value2) {
            addCriterion("TDETAIL_ID not between", value1, value2, "tdetailId");
            return this;
        }

        public Criteria andExpensesIdIsNull() {
            addCriterion("EXPENSES_ID is null");
            return this;
        }

        public Criteria andExpensesIdIsNotNull() {
            addCriterion("EXPENSES_ID is not null");
            return this;
        }

        public Criteria andExpensesIdEqualTo(Long value) {
            addCriterion("EXPENSES_ID =", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotEqualTo(Long value) {
            addCriterion("EXPENSES_ID <>", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdGreaterThan(Long value) {
            addCriterion("EXPENSES_ID >", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdGreaterThanOrEqualTo(Long value) {
            addCriterion("EXPENSES_ID >=", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdLessThan(Long value) {
            addCriterion("EXPENSES_ID <", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdLessThanOrEqualTo(Long value) {
            addCriterion("EXPENSES_ID <=", value, "expensesId");
            return this;
        }

        public Criteria andExpensesIdIn(List values) {
            addCriterion("EXPENSES_ID in", values, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotIn(List values) {
            addCriterion("EXPENSES_ID not in", values, "expensesId");
            return this;
        }

        public Criteria andExpensesIdBetween(Long value1, Long value2) {
            addCriterion("EXPENSES_ID between", value1, value2, "expensesId");
            return this;
        }

        public Criteria andExpensesIdNotBetween(Long value1, Long value2) {
            addCriterion("EXPENSES_ID not between", value1, value2, "expensesId");
            return this;
        }

        public Criteria andFromDateIsNull() {
            addCriterion("FROM_DATE is null");
            return this;
        }

        public Criteria andFromDateIsNotNull() {
            addCriterion("FROM_DATE is not null");
            return this;
        }

        public Criteria andFromDateEqualTo(String value) {
            addCriterion("FROM_DATE =", value, "fromDate");
            return this;
        }

        public Criteria andFromDateNotEqualTo(String value) {
            addCriterion("FROM_DATE <>", value, "fromDate");
            return this;
        }

        public Criteria andFromDateGreaterThan(String value) {
            addCriterion("FROM_DATE >", value, "fromDate");
            return this;
        }

        public Criteria andFromDateGreaterThanOrEqualTo(String value) {
            addCriterion("FROM_DATE >=", value, "fromDate");
            return this;
        }

        public Criteria andFromDateLessThan(String value) {
            addCriterion("FROM_DATE <", value, "fromDate");
            return this;
        }

        public Criteria andFromDateLessThanOrEqualTo(String value) {
            addCriterion("FROM_DATE <=", value, "fromDate");
            return this;
        }

        public Criteria andFromDateLike(String value) {
            addCriterion("FROM_DATE like", value, "fromDate");
            return this;
        }

        public Criteria andFromDateNotLike(String value) {
            addCriterion("FROM_DATE not like", value, "fromDate");
            return this;
        }

        public Criteria andFromDateIn(List values) {
            addCriterion("FROM_DATE in", values, "fromDate");
            return this;
        }

        public Criteria andFromDateNotIn(List values) {
            addCriterion("FROM_DATE not in", values, "fromDate");
            return this;
        }

        public Criteria andFromDateBetween(String value1, String value2) {
            addCriterion("FROM_DATE between", value1, value2, "fromDate");
            return this;
        }

        public Criteria andFromDateNotBetween(String value1, String value2) {
            addCriterion("FROM_DATE not between", value1, value2, "fromDate");
            return this;
        }

        public Criteria andToDateIsNull() {
            addCriterion("TO_DATE is null");
            return this;
        }

        public Criteria andToDateIsNotNull() {
            addCriterion("TO_DATE is not null");
            return this;
        }

        public Criteria andToDateEqualTo(String value) {
            addCriterion("TO_DATE =", value, "toDate");
            return this;
        }

        public Criteria andToDateNotEqualTo(String value) {
            addCriterion("TO_DATE <>", value, "toDate");
            return this;
        }

        public Criteria andToDateGreaterThan(String value) {
            addCriterion("TO_DATE >", value, "toDate");
            return this;
        }

        public Criteria andToDateGreaterThanOrEqualTo(String value) {
            addCriterion("TO_DATE >=", value, "toDate");
            return this;
        }

        public Criteria andToDateLessThan(String value) {
            addCriterion("TO_DATE <", value, "toDate");
            return this;
        }

        public Criteria andToDateLessThanOrEqualTo(String value) {
            addCriterion("TO_DATE <=", value, "toDate");
            return this;
        }

        public Criteria andToDateLike(String value) {
            addCriterion("TO_DATE like", value, "toDate");
            return this;
        }

        public Criteria andToDateNotLike(String value) {
            addCriterion("TO_DATE not like", value, "toDate");
            return this;
        }

        public Criteria andToDateIn(List values) {
            addCriterion("TO_DATE in", values, "toDate");
            return this;
        }

        public Criteria andToDateNotIn(List values) {
            addCriterion("TO_DATE not in", values, "toDate");
            return this;
        }

        public Criteria andToDateBetween(String value1, String value2) {
            addCriterion("TO_DATE between", value1, value2, "toDate");
            return this;
        }

        public Criteria andToDateNotBetween(String value1, String value2) {
            addCriterion("TO_DATE not between", value1, value2, "toDate");
            return this;
        }

        public Criteria andTravelFromIsNull() {
            addCriterion("TRAVEL_FROM is null");
            return this;
        }

        public Criteria andTravelFromIsNotNull() {
            addCriterion("TRAVEL_FROM is not null");
            return this;
        }

        public Criteria andTravelFromEqualTo(String value) {
            addCriterion("TRAVEL_FROM =", value, "travelFrom");
            return this;
        }

        public Criteria andTravelFromNotEqualTo(String value) {
            addCriterion("TRAVEL_FROM <>", value, "travelFrom");
            return this;
        }

        public Criteria andTravelFromGreaterThan(String value) {
            addCriterion("TRAVEL_FROM >", value, "travelFrom");
            return this;
        }

        public Criteria andTravelFromGreaterThanOrEqualTo(String value) {
            addCriterion("TRAVEL_FROM >=", value, "travelFrom");
            return this;
        }

        public Criteria andTravelFromLessThan(String value) {
            addCriterion("TRAVEL_FROM <", value, "travelFrom");
            return this;
        }

        public Criteria andTravelFromLessThanOrEqualTo(String value) {
            addCriterion("TRAVEL_FROM <=", value, "travelFrom");
            return this;
        }

        public Criteria andTravelFromLike(String value) {
            addCriterion("TRAVEL_FROM like", value, "travelFrom");
            return this;
        }

        public Criteria andTravelFromNotLike(String value) {
            addCriterion("TRAVEL_FROM not like", value, "travelFrom");
            return this;
        }

        public Criteria andTravelFromIn(List values) {
            addCriterion("TRAVEL_FROM in", values, "travelFrom");
            return this;
        }

        public Criteria andTravelFromNotIn(List values) {
            addCriterion("TRAVEL_FROM not in", values, "travelFrom");
            return this;
        }

        public Criteria andTravelFromBetween(String value1, String value2) {
            addCriterion("TRAVEL_FROM between", value1, value2, "travelFrom");
            return this;
        }

        public Criteria andTravelFromNotBetween(String value1, String value2) {
            addCriterion("TRAVEL_FROM not between", value1, value2, "travelFrom");
            return this;
        }

        public Criteria andTravelToIsNull() {
            addCriterion("TRAVEL_TO is null");
            return this;
        }

        public Criteria andTravelToIsNotNull() {
            addCriterion("TRAVEL_TO is not null");
            return this;
        }

        public Criteria andTravelToEqualTo(String value) {
            addCriterion("TRAVEL_TO =", value, "travelTo");
            return this;
        }

        public Criteria andTravelToNotEqualTo(String value) {
            addCriterion("TRAVEL_TO <>", value, "travelTo");
            return this;
        }

        public Criteria andTravelToGreaterThan(String value) {
            addCriterion("TRAVEL_TO >", value, "travelTo");
            return this;
        }

        public Criteria andTravelToGreaterThanOrEqualTo(String value) {
            addCriterion("TRAVEL_TO >=", value, "travelTo");
            return this;
        }

        public Criteria andTravelToLessThan(String value) {
            addCriterion("TRAVEL_TO <", value, "travelTo");
            return this;
        }

        public Criteria andTravelToLessThanOrEqualTo(String value) {
            addCriterion("TRAVEL_TO <=", value, "travelTo");
            return this;
        }

        public Criteria andTravelToLike(String value) {
            addCriterion("TRAVEL_TO like", value, "travelTo");
            return this;
        }

        public Criteria andTravelToNotLike(String value) {
            addCriterion("TRAVEL_TO not like", value, "travelTo");
            return this;
        }

        public Criteria andTravelToIn(List values) {
            addCriterion("TRAVEL_TO in", values, "travelTo");
            return this;
        }

        public Criteria andTravelToNotIn(List values) {
            addCriterion("TRAVEL_TO not in", values, "travelTo");
            return this;
        }

        public Criteria andTravelToBetween(String value1, String value2) {
            addCriterion("TRAVEL_TO between", value1, value2, "travelTo");
            return this;
        }

        public Criteria andTravelToNotBetween(String value1, String value2) {
            addCriterion("TRAVEL_TO not between", value1, value2, "travelTo");
            return this;
        }

        public Criteria andTransportModeIsNull() {
            addCriterion("TRANSPORT_MODE is null");
            return this;
        }

        public Criteria andTransportModeIsNotNull() {
            addCriterion("TRANSPORT_MODE is not null");
            return this;
        }

        public Criteria andTransportModeEqualTo(String value) {
            addCriterion("TRANSPORT_MODE =", value, "transportMode");
            return this;
        }

        public Criteria andTransportModeNotEqualTo(String value) {
            addCriterion("TRANSPORT_MODE <>", value, "transportMode");
            return this;
        }

        public Criteria andTransportModeGreaterThan(String value) {
            addCriterion("TRANSPORT_MODE >", value, "transportMode");
            return this;
        }

        public Criteria andTransportModeGreaterThanOrEqualTo(String value) {
            addCriterion("TRANSPORT_MODE >=", value, "transportMode");
            return this;
        }

        public Criteria andTransportModeLessThan(String value) {
            addCriterion("TRANSPORT_MODE <", value, "transportMode");
            return this;
        }

        public Criteria andTransportModeLessThanOrEqualTo(String value) {
            addCriterion("TRANSPORT_MODE <=", value, "transportMode");
            return this;
        }

        public Criteria andTransportModeLike(String value) {
            addCriterion("TRANSPORT_MODE like", value, "transportMode");
            return this;
        }

        public Criteria andTransportModeNotLike(String value) {
            addCriterion("TRANSPORT_MODE not like", value, "transportMode");
            return this;
        }

        public Criteria andTransportModeIn(List values) {
            addCriterion("TRANSPORT_MODE in", values, "transportMode");
            return this;
        }

        public Criteria andTransportModeNotIn(List values) {
            addCriterion("TRANSPORT_MODE not in", values, "transportMode");
            return this;
        }

        public Criteria andTransportModeBetween(String value1, String value2) {
            addCriterion("TRANSPORT_MODE between", value1, value2, "transportMode");
            return this;
        }

        public Criteria andTransportModeNotBetween(String value1, String value2) {
            addCriterion("TRANSPORT_MODE not between", value1, value2, "transportMode");
            return this;
        }

        public Criteria andInvoicenoIsNull() {
            addCriterion("INVOICENO is null");
            return this;
        }

        public Criteria andInvoicenoIsNotNull() {
            addCriterion("INVOICENO is not null");
            return this;
        }

        public Criteria andInvoicenoEqualTo(Integer value) {
            addCriterion("INVOICENO =", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoNotEqualTo(Integer value) {
            addCriterion("INVOICENO <>", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoGreaterThan(Integer value) {
            addCriterion("INVOICENO >", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoGreaterThanOrEqualTo(Integer value) {
            addCriterion("INVOICENO >=", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoLessThan(Integer value) {
            addCriterion("INVOICENO <", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoLessThanOrEqualTo(Integer value) {
            addCriterion("INVOICENO <=", value, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoIn(List values) {
            addCriterion("INVOICENO in", values, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoNotIn(List values) {
            addCriterion("INVOICENO not in", values, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoBetween(Integer value1, Integer value2) {
            addCriterion("INVOICENO between", value1, value2, "invoiceno");
            return this;
        }

        public Criteria andInvoicenoNotBetween(Integer value1, Integer value2) {
            addCriterion("INVOICENO not between", value1, value2, "invoiceno");
            return this;
        }

        public Criteria andFeeIsNull() {
            addCriterion("FEE is null");
            return this;
        }

        public Criteria andFeeIsNotNull() {
            addCriterion("FEE is not null");
            return this;
        }

        public Criteria andFeeEqualTo(Double value) {
            addCriterion("FEE =", value, "fee");
            return this;
        }

        public Criteria andFeeNotEqualTo(Double value) {
            addCriterion("FEE <>", value, "fee");
            return this;
        }

        public Criteria andFeeGreaterThan(Double value) {
            addCriterion("FEE >", value, "fee");
            return this;
        }

        public Criteria andFeeGreaterThanOrEqualTo(Double value) {
            addCriterion("FEE >=", value, "fee");
            return this;
        }

        public Criteria andFeeLessThan(Double value) {
            addCriterion("FEE <", value, "fee");
            return this;
        }

        public Criteria andFeeLessThanOrEqualTo(Double value) {
            addCriterion("FEE <=", value, "fee");
            return this;
        }

        public Criteria andFeeIn(List values) {
            addCriterion("FEE in", values, "fee");
            return this;
        }

        public Criteria andFeeNotIn(List values) {
            addCriterion("FEE not in", values, "fee");
            return this;
        }

        public Criteria andFeeBetween(Double value1, Double value2) {
            addCriterion("FEE between", value1, value2, "fee");
            return this;
        }

        public Criteria andFeeNotBetween(Double value1, Double value2) {
            addCriterion("FEE not between", value1, value2, "fee");
            return this;
        }
    }
}