package com.blue.mile;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MileStoneExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    public MileStoneExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    protected MileStoneExample(MileStoneExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table mile_stone
     *
     * @ibatorgenerated Mon Sep 10 13:51:14 CST 2012
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andMileStoneIdIsNull() {
            addCriterion("MILE_STONE_ID is null");
            return this;
        }

        public Criteria andMileStoneIdIsNotNull() {
            addCriterion("MILE_STONE_ID is not null");
            return this;
        }

        public Criteria andMileStoneIdEqualTo(Long value) {
            addCriterion("MILE_STONE_ID =", value, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdNotEqualTo(Long value) {
            addCriterion("MILE_STONE_ID <>", value, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdGreaterThan(Long value) {
            addCriterion("MILE_STONE_ID >", value, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdGreaterThanOrEqualTo(Long value) {
            addCriterion("MILE_STONE_ID >=", value, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdLessThan(Long value) {
            addCriterion("MILE_STONE_ID <", value, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdLessThanOrEqualTo(Long value) {
            addCriterion("MILE_STONE_ID <=", value, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdIn(List values) {
            addCriterion("MILE_STONE_ID in", values, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdNotIn(List values) {
            addCriterion("MILE_STONE_ID not in", values, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdBetween(Long value1, Long value2) {
            addCriterion("MILE_STONE_ID between", value1, value2, "mileStoneId");
            return this;
        }

        public Criteria andMileStoneIdNotBetween(Long value1, Long value2) {
            addCriterion("MILE_STONE_ID not between", value1, value2, "mileStoneId");
            return this;
        }

        public Criteria andProjectIdIsNull() {
            addCriterion("PROJECT_ID is null");
            return this;
        }

        public Criteria andProjectIdIsNotNull() {
            addCriterion("PROJECT_ID is not null");
            return this;
        }

        public Criteria andProjectIdEqualTo(String value) {
            addCriterion("PROJECT_ID =", value, "projectId");
            return this;
        }

        public Criteria andProjectIdNotEqualTo(String value) {
            addCriterion("PROJECT_ID <>", value, "projectId");
            return this;
        }

        public Criteria andProjectIdGreaterThan(String value) {
            addCriterion("PROJECT_ID >", value, "projectId");
            return this;
        }

        public Criteria andProjectIdGreaterThanOrEqualTo(String value) {
            addCriterion("PROJECT_ID >=", value, "projectId");
            return this;
        }

        public Criteria andProjectIdLessThan(String value) {
            addCriterion("PROJECT_ID <", value, "projectId");
            return this;
        }

        public Criteria andProjectIdLessThanOrEqualTo(String value) {
            addCriterion("PROJECT_ID <=", value, "projectId");
            return this;
        }

        public Criteria andProjectIdLike(String value) {
            addCriterion("PROJECT_ID like", value, "projectId");
            return this;
        }

        public Criteria andProjectIdNotLike(String value) {
            addCriterion("PROJECT_ID not like", value, "projectId");
            return this;
        }

        public Criteria andProjectIdIn(List values) {
            addCriterion("PROJECT_ID in", values, "projectId");
            return this;
        }

        public Criteria andProjectIdNotIn(List values) {
            addCriterion("PROJECT_ID not in", values, "projectId");
            return this;
        }

        public Criteria andProjectIdBetween(String value1, String value2) {
            addCriterion("PROJECT_ID between", value1, value2, "projectId");
            return this;
        }

        public Criteria andProjectIdNotBetween(String value1, String value2) {
            addCriterion("PROJECT_ID not between", value1, value2, "projectId");
            return this;
        }

        public Criteria andStoneNameIsNull() {
            addCriterion("STONE_NAME is null");
            return this;
        }

        public Criteria andStoneNameIsNotNull() {
            addCriterion("STONE_NAME is not null");
            return this;
        }

        public Criteria andStoneNameEqualTo(String value) {
            addCriterion("STONE_NAME =", value, "stoneName");
            return this;
        }

        public Criteria andStoneNameNotEqualTo(String value) {
            addCriterion("STONE_NAME <>", value, "stoneName");
            return this;
        }

        public Criteria andStoneNameGreaterThan(String value) {
            addCriterion("STONE_NAME >", value, "stoneName");
            return this;
        }

        public Criteria andStoneNameGreaterThanOrEqualTo(String value) {
            addCriterion("STONE_NAME >=", value, "stoneName");
            return this;
        }

        public Criteria andStoneNameLessThan(String value) {
            addCriterion("STONE_NAME <", value, "stoneName");
            return this;
        }

        public Criteria andStoneNameLessThanOrEqualTo(String value) {
            addCriterion("STONE_NAME <=", value, "stoneName");
            return this;
        }

        public Criteria andStoneNameLike(String value) {
            addCriterion("STONE_NAME like", value, "stoneName");
            return this;
        }

        public Criteria andStoneNameNotLike(String value) {
            addCriterion("STONE_NAME not like", value, "stoneName");
            return this;
        }

        public Criteria andStoneNameIn(List values) {
            addCriterion("STONE_NAME in", values, "stoneName");
            return this;
        }

        public Criteria andStoneNameNotIn(List values) {
            addCriterion("STONE_NAME not in", values, "stoneName");
            return this;
        }

        public Criteria andStoneNameBetween(String value1, String value2) {
            addCriterion("STONE_NAME between", value1, value2, "stoneName");
            return this;
        }

        public Criteria andStoneNameNotBetween(String value1, String value2) {
            addCriterion("STONE_NAME not between", value1, value2, "stoneName");
            return this;
        }

        public Criteria andEndDateIsNull() {
            addCriterion("END_DATE is null");
            return this;
        }

        public Criteria andEndDateIsNotNull() {
            addCriterion("END_DATE is not null");
            return this;
        }

        public Criteria andEndDateEqualTo(String value) {
            addCriterion("END_DATE =", value, "endDate");
            return this;
        }

        public Criteria andEndDateNotEqualTo(String value) {
            addCriterion("END_DATE <>", value, "endDate");
            return this;
        }

        public Criteria andEndDateGreaterThan(String value) {
            addCriterion("END_DATE >", value, "endDate");
            return this;
        }

        public Criteria andEndDateGreaterThanOrEqualTo(String value) {
            addCriterion("END_DATE >=", value, "endDate");
            return this;
        }

        public Criteria andEndDateLessThan(String value) {
            addCriterion("END_DATE <", value, "endDate");
            return this;
        }

        public Criteria andEndDateLessThanOrEqualTo(String value) {
            addCriterion("END_DATE <=", value, "endDate");
            return this;
        }

        public Criteria andEndDateLike(String value) {
            addCriterion("END_DATE like", value, "endDate");
            return this;
        }

        public Criteria andEndDateNotLike(String value) {
            addCriterion("END_DATE not like", value, "endDate");
            return this;
        }

        public Criteria andEndDateIn(List values) {
            addCriterion("END_DATE in", values, "endDate");
            return this;
        }

        public Criteria andEndDateNotIn(List values) {
            addCriterion("END_DATE not in", values, "endDate");
            return this;
        }

        public Criteria andEndDateBetween(String value1, String value2) {
            addCriterion("END_DATE between", value1, value2, "endDate");
            return this;
        }

        public Criteria andEndDateNotBetween(String value1, String value2) {
            addCriterion("END_DATE not between", value1, value2, "endDate");
            return this;
        }

        public Criteria andMemoIsNull() {
            addCriterion("MEMO is null");
            return this;
        }

        public Criteria andMemoIsNotNull() {
            addCriterion("MEMO is not null");
            return this;
        }

        public Criteria andMemoEqualTo(String value) {
            addCriterion("MEMO =", value, "memo");
            return this;
        }

        public Criteria andMemoNotEqualTo(String value) {
            addCriterion("MEMO <>", value, "memo");
            return this;
        }

        public Criteria andMemoGreaterThan(String value) {
            addCriterion("MEMO >", value, "memo");
            return this;
        }

        public Criteria andMemoGreaterThanOrEqualTo(String value) {
            addCriterion("MEMO >=", value, "memo");
            return this;
        }

        public Criteria andMemoLessThan(String value) {
            addCriterion("MEMO <", value, "memo");
            return this;
        }

        public Criteria andMemoLessThanOrEqualTo(String value) {
            addCriterion("MEMO <=", value, "memo");
            return this;
        }

        public Criteria andMemoLike(String value) {
            addCriterion("MEMO like", value, "memo");
            return this;
        }

        public Criteria andMemoNotLike(String value) {
            addCriterion("MEMO not like", value, "memo");
            return this;
        }

        public Criteria andMemoIn(List values) {
            addCriterion("MEMO in", values, "memo");
            return this;
        }

        public Criteria andMemoNotIn(List values) {
            addCriterion("MEMO not in", values, "memo");
            return this;
        }

        public Criteria andMemoBetween(String value1, String value2) {
            addCriterion("MEMO between", value1, value2, "memo");
            return this;
        }

        public Criteria andMemoNotBetween(String value1, String value2) {
            addCriterion("MEMO not between", value1, value2, "memo");
            return this;
        }

        public Criteria andInputUserIsNull() {
            addCriterion("INPUT_USER is null");
            return this;
        }

        public Criteria andInputUserIsNotNull() {
            addCriterion("INPUT_USER is not null");
            return this;
        }

        public Criteria andInputUserEqualTo(String value) {
            addCriterion("INPUT_USER =", value, "inputUser");
            return this;
        }

        public Criteria andInputUserNotEqualTo(String value) {
            addCriterion("INPUT_USER <>", value, "inputUser");
            return this;
        }

        public Criteria andInputUserGreaterThan(String value) {
            addCriterion("INPUT_USER >", value, "inputUser");
            return this;
        }

        public Criteria andInputUserGreaterThanOrEqualTo(String value) {
            addCriterion("INPUT_USER >=", value, "inputUser");
            return this;
        }

        public Criteria andInputUserLessThan(String value) {
            addCriterion("INPUT_USER <", value, "inputUser");
            return this;
        }

        public Criteria andInputUserLessThanOrEqualTo(String value) {
            addCriterion("INPUT_USER <=", value, "inputUser");
            return this;
        }

        public Criteria andInputUserLike(String value) {
            addCriterion("INPUT_USER like", value, "inputUser");
            return this;
        }

        public Criteria andInputUserNotLike(String value) {
            addCriterion("INPUT_USER not like", value, "inputUser");
            return this;
        }

        public Criteria andInputUserIn(List values) {
            addCriterion("INPUT_USER in", values, "inputUser");
            return this;
        }

        public Criteria andInputUserNotIn(List values) {
            addCriterion("INPUT_USER not in", values, "inputUser");
            return this;
        }

        public Criteria andInputUserBetween(String value1, String value2) {
            addCriterion("INPUT_USER between", value1, value2, "inputUser");
            return this;
        }

        public Criteria andInputUserNotBetween(String value1, String value2) {
            addCriterion("INPUT_USER not between", value1, value2, "inputUser");
            return this;
        }

        public Criteria andInputDateIsNull() {
            addCriterion("INPUT_DATE is null");
            return this;
        }

        public Criteria andInputDateIsNotNull() {
            addCriterion("INPUT_DATE is not null");
            return this;
        }

        public Criteria andInputDateEqualTo(String value) {
            addCriterion("INPUT_DATE =", value, "inputDate");
            return this;
        }

        public Criteria andInputDateNotEqualTo(String value) {
            addCriterion("INPUT_DATE <>", value, "inputDate");
            return this;
        }

        public Criteria andInputDateGreaterThan(String value) {
            addCriterion("INPUT_DATE >", value, "inputDate");
            return this;
        }

        public Criteria andInputDateGreaterThanOrEqualTo(String value) {
            addCriterion("INPUT_DATE >=", value, "inputDate");
            return this;
        }

        public Criteria andInputDateLessThan(String value) {
            addCriterion("INPUT_DATE <", value, "inputDate");
            return this;
        }

        public Criteria andInputDateLessThanOrEqualTo(String value) {
            addCriterion("INPUT_DATE <=", value, "inputDate");
            return this;
        }

        public Criteria andInputDateLike(String value) {
            addCriterion("INPUT_DATE like", value, "inputDate");
            return this;
        }

        public Criteria andInputDateNotLike(String value) {
            addCriterion("INPUT_DATE not like", value, "inputDate");
            return this;
        }

        public Criteria andInputDateIn(List values) {
            addCriterion("INPUT_DATE in", values, "inputDate");
            return this;
        }

        public Criteria andInputDateNotIn(List values) {
            addCriterion("INPUT_DATE not in", values, "inputDate");
            return this;
        }

        public Criteria andInputDateBetween(String value1, String value2) {
            addCriterion("INPUT_DATE between", value1, value2, "inputDate");
            return this;
        }

        public Criteria andInputDateNotBetween(String value1, String value2) {
            addCriterion("INPUT_DATE not between", value1, value2, "inputDate");
            return this;
        }
    }
}