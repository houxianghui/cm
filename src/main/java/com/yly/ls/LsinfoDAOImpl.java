package com.yly.ls;

import com.yly.ls.Lsinfo;
import com.yly.ls.LsinfoExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class LsinfoDAOImpl extends SqlMapClientDaoSupport implements LsinfoDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public LsinfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public int countByExample(LsinfoExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("lsinfo.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public int deleteByExample(LsinfoExample example) {
        int rows = getSqlMapClientTemplate().delete("lsinfo.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public int deleteByPrimaryKey(String flowNo) {
        Lsinfo key = new Lsinfo();
        key.setFlowNo(flowNo);
        int rows = getSqlMapClientTemplate().delete("lsinfo.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public void insert(Lsinfo record) {
        getSqlMapClientTemplate().insert("lsinfo.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public void insertSelective(Lsinfo record) {
        getSqlMapClientTemplate().insert("lsinfo.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public List selectByExample(LsinfoExample example) {
        List list = getSqlMapClientTemplate().queryForList("lsinfo.ibatorgenerated_selectByExample", example);
        return list;
    }
    
    public List getStockBalReport(LsinfoExample example) {
        List list = getSqlMapClientTemplate().queryForList("lsinfo.getStockBalReport", example);
        return list;
    }
    
    public List getLSBackReport(LsinfoExample example) {
        List list = getSqlMapClientTemplate().queryForList("lsinfo.getLSBackReport", example);
        return list;
    }
    public List getLsDisCardReport(LsinfoExample example) {
        List list = getSqlMapClientTemplate().queryForList("lsinfo.getLsDisCardReport", example);
        return list;
    }
    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public Lsinfo selectByPrimaryKey(String flowNo) {
        Lsinfo key = new Lsinfo();
        key.setFlowNo(flowNo);
        Lsinfo record = (Lsinfo) getSqlMapClientTemplate().queryForObject("lsinfo.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public int updateByExampleSelective(Lsinfo record, LsinfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("lsinfo.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public int updateByExample(Lsinfo record, LsinfoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("lsinfo.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public int updateByPrimaryKeySelective(Lsinfo record) {
        int rows = getSqlMapClientTemplate().update("lsinfo.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    public int updateByPrimaryKey(Lsinfo record) {
        int rows = getSqlMapClientTemplate().update("lsinfo.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table lsinfo
     *
     * @ibatorgenerated Wed May 25 09:26:11 CST 2016
     */
    private static class UpdateByExampleParms extends LsinfoExample {
        private Object record;

        public UpdateByExampleParms(Object record, LsinfoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}